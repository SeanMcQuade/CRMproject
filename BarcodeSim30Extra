%{
BarCode sim for Dr. Jongmin Nam
Sean McQuade and Jongmin Nam 1.08.2015 to 5.26.2015
using Sea Urchin Lineage from "Development of Sea Urchins, Ascidians, and
other invertebrate Deuterostomes: Experimental Approaches"

Authors: Charles A. Ettensohn, Gary M. Wessel, Gregory A. Wray

Elsevier academic press

 
% i=cellgroup integraged; 
% j=cell in group; 
% int = number of integrated cells
% exp = number of expressed cells
%}
%%
%All oblique cell cleavages are coded as horizontal cleavages!
tic
clear  %Total_Targets is a cell array with all targets to be compared
%the simulation loops through this cell array

%figure 1
Total_Targets{1} = 50;%compare (C) with (A) with (B) 
Total_Targets{2} = 51;
Total_Targets{3} = 52;

%figure 2
Total_Targets{4} = 51;%compare (A) with (BC)
Total_Targets{5} = [50,52];

%figure 3
Total_Targets{6} = [50,51];%compare (A,C) with (half A, half B, C)
Total_Targets{7} = [50,51,52];
%Total_Targets{5} = [51,52];

%figure 4  D = C{47}, C{48}, and C{49}
Total_Targets{8} = [50,51];%compare (C+A) vs. (C+D)
Total_Targets{9} = [47,48,49,50];


global Number_of_Iterations
%%
for a = 1:size(Total_Targets,2)
%parameters
Number_of_Trials = 1;
Number_of_Iterations = 10000;
percent_trim = 0.01;

%initialize
C{64}=[];          %preallocate memory for Cell array
Integration_Stage = zeros(Number_of_Iterations,1);   
Integrated_Cells = zeros(Number_of_Iterations,1);
Expressed_Cells = zeros(Number_of_Iterations,1);
Ratio_Exp_to_Int = zeros(Number_of_Iterations,1);
A_plot = [0, 0, 0]; %place holder
A_raw = [0, 0, 0]; %place holder
ROP_log{Number_of_Trials} = 0;

%save file name
path = sprintf('Sim30_target_%s.txt',mat2str(Total_Targets{a}));
if a == 7
    path = 'half51, half52, and 50';
end

for b = 1:Number_of_Trials       
for c = 1:Number_of_Iterations     
%{  
The probability of DNA integration occuring in a stage is modeled on 
empiracally obtained profile from Dr. Nam. For a given stage, the probability 
of DNA integration into the ith group is proportional to the number of 
cells in the ith group.
%}

% create integration profile (this must change for oblique clev
%%
h = randi(95148);
if h == 1 %0th stage, yields ~424 integrated cells
    i=1;
    m=1;
elseif h >= 2 && h<=31 %Stage I, yields ~212 integrated cells
    i=2;
    m=2;
elseif h>=32 && h<=958   %Stage II, yields ~106 integrated cells
    i=3;      
    m=3;
elseif h>=959 && h<=9589 %Stage III, yields ~64 integrated cells
    i=4;
    m=4;
elseif h>=9590 && h<=28880  %Stage IV, yields ~32-42 integrated cells
    i=randi([5,8]);
    m=5;
elseif h>=28881 && h<=46066 %Stage V, yields ~16 integrated cells 
    p=randi(6);
    if p==1
        i=10;
    elseif p==2
        i=11;
    elseif p==3 || p==4
        i = 12;
    elseif p==5 || p==6
        i=13;
    end
    m=6;
elseif h>=46067 && h<=58496 %Stage VI, yields ~8-10 integrated cells
    p=randi(14);
    if p==1
        i=9;
    elseif p==2
        i=14;
    elseif p==3
        i = 16;
    elseif p==4
        i=17;
    elseif p==5 || p==6
        i=18;
    elseif p>=7 && p<=10
        i=19;
    elseif p==11 || p==12
        i=20;
    elseif p==13 || p==14
        i=21;
    end
    m=7;
elseif h>=58497 && h<=68321 %Stage VII, yields ~4 integrated cells
    p=randi(26);
    if p==1
        i=22;
    elseif p==2
        i=23;
    elseif p==3 || p==4
        i=24;
    elseif p==5 || p==6
        i=25;
    elseif p>=7 && p<=10
        i=26;
    elseif p>=11 && p<=14
        i=27;
    elseif p>=15 && p<=18
        i=28;
    elseif p>=19 && p<=22
        i=29;
    elseif p>=23 && p<=26
        i=30;
    end
    m=8;
elseif h>=68322 && h<75147  %Stage VIII, yields ~2 integrated cells
    p=randi(53);

    if p == 1
        i = 15;
    elseif p>=2 && p<=5
        i=randi([31,34]);
    elseif p==6 || p==7
        i = 35;
    elseif p==8 || p==9
        i = 36;
    elseif p>=10 && p<=13
        i = 37;
    elseif p>=14 && p<=37
        i=randi([38,40]);
    elseif p>=38 && p<=53
        i=randi([41,44]);
        
    %{
    if p==1
        i=31;
    elseif p==2
        i=32;
    elseif p==3
        i=33;
    elseif p==4
        i=34;
    elseif p==5 || p==6
        i=35;
    elseif p==7 || p==8
        i=36;
    elseif p>=9 && p<=16
        i=37;
    elseif p>=17 && p<=24
        i=38;
    elseif p>=25 && p<=32
        i=39;
    elseif p>=33 && p<=40
        i=40;
    elseif p>=40 && p<=43
        i=41;
    elseif p>=44 && p<=47
        i=42;
    elseif p>=48 && p<=51
        i=43;
    elseif p>=52 && p<=55
        i=44;
  %}
    end
    m=9;
elseif h>=75148 && h<=95148 %Stage IX, yields 1 integrated cell
    i=randi([45,64]);
    m=10;
end
%%
%make vector for hist: Integration_Stage
Integration_Stage(c)=m;

%  Cell in group C{i} chosen uniformly.
if i == 1
    DNA_integrated_cell = 1;
elseif i == 2
    DNA_integrated_cell = randi(2);
elseif i>=3 && i<=11 || i>=14 && i<=17 || i>=31 && i<=34 || i>=45 && i<=46 || ...
        i>=22 && i<=23
    DNA_integrated_cell = randi(4);
elseif i>=12 && i<=13 || i==18 || i>=20 && i<=21 || i>=24 && i<=25 || ... 
        i>=35 && i<=36 || i>=47 && i<=48 || i>=61 
    DNA_integrated_cell = randi(8);
elseif i==19 || i>=26 && i<=30 || i>=41 && i<=44 || i==49 
    DNA_integrated_cell = randi(16);
elseif i>=37 && i<=40 || i>=50 && i<=60
    DNA_integrated_cell = randi(32);
end

%the DNA is integrated in the jth cell in the ith group.
j = DNA_integrated_cell;
%%    The cells multiply with incorporated dna expressed as 1, no incorporation is 0.
%, they multiply either by concatenating a group with itself 
%(no bifurcation on the cell lineage) , or by setting two new groups equal
%to the parent group (bifurcation in the cell lineage)
Cells0 = zeros(1,1); 

C{1}= Cells0;
C{i}(1)=1;
C{2}= cat(2,C{1},C{1});              
C{i}(j)=1;
C{3}= cat(2,C{2},C{2});              
C{i}(j)=1;

C{4}= C{3}; 
C{5}= C{3}; 

C{i}(j)=1;
C{6}= C{4};                                                              
C{7}= C{4};                                                                
C{8}= C{5};                                                              
C{9}= C{5};                                                              

C{i}(j)=1; 
C{10} = C{6};  
C{11} = C{6};  
C{12} = cat(2,C{7},C{7});       
C{13} = cat(2,C{8},C{8});         
C{14} = C{9};  
C{15} = C{9};  

C{i}(j)=1; 
C{16} = C{10};                    
C{17} = C{10};                    
C{18} = cat(2,C{11},C{11});     
C{19} = cat(2,C{12},C{12});      
C{20} = C{13};                  
C{21} = C{13};                   
C{22} = C{14};                        
C{23} = C{14};                        

%116 Total Cells   

C{i}(j)=1;                                                   
C{24}= cat(2,C{16},C{16});
C{25}= cat(2,C{17},C{17});
C{26}= cat(2,C{18},C{18});
C{27}= C{19};
C{28}= C{19};
C{29}=  cat(2,C{20},C{20});
C{30}= cat(2,C{21},C{21});
C{31}= C{22};
C{32}= C{22};
C{33}= C{23};
C{34}= C{23};

%232 total cells

C{i}(j)=1; 
C{35}= C{24};
C{36}= C{24};
C{37}=  cat(2,C{25},C{25});
C{38}= cat(2,C{26},C{26});
C{39}= cat(2,C{27},C{27});
C{40}= cat(2,C{28},C{28});
C{41}= C{29};
C{42}= C{29};
C{43}= C{30};
C{44}= C{30};
C{45}= C{15};
C{46}= C{15};

%424 total cells

C{i}(j)=1; 
C{47}= C{35};
C{48}= C{35};
C{49}= cat(2,C{36},C{36});
C{50}= cat(2,C{37},C{37});
C{51}= C{38};
C{52}= C{38};
C{53}= C{39};
C{54}= C{39};
C{55}= C{40};
C{56}= C{40};
C{57}= cat(2,C{41},C{41});
C{58}= cat(2,C{42},C{42});
C{59}= cat(2,C{43},C{43});
C{60}= cat(2,C{44},C{44}); 
C{61}= cat(2,C{31},C{31});
C{62}= cat(2,C{32},C{32});
C{63}= cat(2,C{33},C{33});
C{64}= cat(2,C{34},C{34});

C{i}(j)=1;
%%
%Count integrated cells within specified "target" groups




%for target = [C,hA, hB], we sum the groups
if a == 7
    Targetgroup1 = C{Total_Targets{a}(1)};       %These variables are used to calculate half in 51 and half in 52
    Targetgroup2 = C{Total_Targets{a}(2)};
    Targetgroup3 = C{Total_Targets{a}(3)};
    halfTargetgroup2 = C{Total_Targets{a}(2)}(17:32);
    halfTargetgroup3 = C{Total_Targets{a}(3)}(1:16);
    Expressed_Cells(c) = nnz(Targetgroup1)+ nnz(halfTargetgroup2)+ nnz(halfTargetgroup3);
else
    for d=1:size(Total_Targets{a},2)
        Expressed_Cells(c) = Expressed_Cells(c) + nnz(C{Total_Targets{a}(d)});
    end
end

%Counts integrated cells in all stage 9 groups(also C{45} and C{46} (SM))
Integrated_Cells(c)  = nnz(C{47}) + nnz(C{48}) + nnz(C{49}) + ...
    nnz(C{50}) + nnz(C{51}) + nnz(C{52}) + nnz(C{53}) + nnz(C{54}) +...
    nnz(C{55}) + nnz(C{56}) + nnz(C{57}) + nnz(C{58}) + nnz(C{59}) +...
    nnz(C{60}) + nnz(C{61}) + nnz(C{62}) + nnz(C{63}) + nnz(C{64}) +...
    nnz(C{45}) + nnz(C{46}); %these last two terms add SM1 and SM2
%log the ratio of this particular iteration in the experiment
Ratio_Exp_to_Int(c) = Expressed_Cells(c)/Integrated_Cells(c);
A_raw = [A_raw; Expressed_Cells(c), Integrated_Cells(c), Ratio_Exp_to_Int(c)];
%%%%%%%%%%%% if Integrated_Cells(c) >= 4%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%% A_plot = [A_plot; Expressed_Cells(c), Integrated_Cells(c), Ratio_Exp_to_Int(c)];
%%%%%%%%%%%% end
A_plot = [A_plot; Expressed_Cells(c), Integrated_Cells(c), Ratio_Exp_to_Int(c)];

end
%%
%Data is ordered by column 3 (expression ratio), then put into descending
B_raw = sortrows(A_raw,3); %orders array with respect to(WRT) col 3
D_raw = flip(B_raw,1);    %puts into descending order WRT col 3
D_raw(end,:) = [];     %removes the last row from array, initial zeros for A.
CRM_raw = D_raw;
%from (eq2)
avg_exp = sum(CRM_raw(:,3))/Number_of_Iterations; %instinctual calculation
%avg_exp = sum(CRM_raw(:,1))/sum(CRM_raw(:,2)); %paper calculation eq. (2)


B_plot = sortrows(A_plot,3); %orders array with respect to(WRT) col 3
D_plot = flip(B_plot,1) ;    %puts into descending order WRT col 3
D_plot(end,:) = [];     %removes the last row from array, initial zeros for A.
CRM_plot = D_plot;
simple_vector = (1:Number_of_Iterations);

% title1 = sprintf('expression profile, Target=%s',mat2str(Total_Targets{a}));
% figure;
% plot(simple_vector, Trimmed_info(:,3))
% xlabel('raw number of trials');
% ylabel({'Rank-Ordered, raw expression','(cDNA/gDNA)'});
% title(title1)
% axis([0, size(Trimmed_info, 1), 0, 1]) 
  
% figure;
% plot(simple_vector, CRM_plot(:,3)/avg_exp,'LineWidth',2)
% xlabel('Rank','fontsize',18);
% ylabel('Expression Level / Mean','fontsize',18);
% figure_title = sprintf('%s',mat2str(Total_Targets{a})');
% title(figure_title)
% axis auto
%%
avg_expLOG(a)=avg_exp;
CRMlog{a}=CRM_plot;


%%
%write information to file
fileID = fopen(path,'a');
fprintf(fileID,'%s%s\t%s\t%i\t%s\t%i\t%s\t%f\n','#Target_',mat2str(Total_Targets{a}),'cDNAall'...
    ,sum(CRM_raw(:,1)),'gDNAall',sum(CRM_raw(:,2)),'c/g_all', avg_exp);
fclose(fileID);
%write raw data
for h = 1:size(CRM_raw, 1)
    fileID = fopen(path,'a');
    fprintf(fileID,'\t%s\t%i\t%s\t%i\t%s\t%f\n','cDNA'...
        ,CRM_raw(h,1),'gDNA',CRM_raw(h,2),'c/g',CRM_raw(h,3));
    fclose(fileID);
end

end



end
 
figure(1);
plot(simple_vector, CRMlog{1}(:,3)/avg_expLOG(1),simple_vector, CRMlog{2}(:,3)/avg_expLOG(2),'--',simple_vector, CRMlog{3}(:,3)/avg_expLOG(3),':','LineWidth',2)
xlabel('Rank','fontsize',18);
ylabel('Expression Level / Mean','fontsize',18);
title('Comparison of Rank Order Profiles','fontsize',18)
legend('C', 'A', 'B')
DistanceC_A=rop_metric(CRMlog{1},CRMlog{2});
DistanceA_B=rop_metric(CRMlog{2},CRMlog{3});
DistanceC_B=rop_metric(CRMlog{1},CRMlog{3});
inset1a = sprintf('D(A,C) = %3.3f',DistanceC_A);
inset1b = sprintf('D(A,B) = %3.3f',DistanceA_B);
inset1c = sprintf('D(B,C) = %3.3f',DistanceC_B);
text(7500,11,inset1a)
text(7500,10,inset1b)
text(7500,9,inset1c)

%legend('C', 'A', 'B', 'A and B', 'hA and hB')
figure(2);
plot(simple_vector, CRMlog{4}(:,3)/avg_expLOG(4),simple_vector, CRMlog{5}(:,3)/avg_expLOG(5),'--','LineWidth',2)
xlabel('Rank','fontsize',18);
ylabel('Expression Level / Mean','fontsize',18);
title('Comparison of Rank Order Profiles','fontsize',18)
legend('A', 'B and C')
DistanceA_BC=rop_metric(CRMlog{4},CRMlog{5});
inset2 = sprintf('D = %3.3f',DistanceA_BC);
text(7500,11,inset2)

figure(3);
plot(simple_vector, CRMlog{6}(:,3)/avg_expLOG(6),simple_vector, CRMlog{7}(:,3)/avg_expLOG(7),'--','LineWidth',2)
xlabel('Rank','fontsize',18);
ylabel('Expression Level / Mean','fontsize',18);
title('Comparison of Rank Order Profiles','fontsize',18)
legend('A and C', 'half A and half B and C')
DistanceAC_hAhBC=rop_metric(CRMlog{6},CRMlog{7});
inset3 = sprintf('D = %3.3f',DistanceAC_hAhBC);
text(7000,5,inset3)

figure(4);
plot(simple_vector, CRMlog{8}(:,3)/avg_expLOG(8),simple_vector, CRMlog{9}(:,3)/avg_expLOG(9),'--','LineWidth',2)
xlabel('Rank','fontsize',18);
ylabel('Expression Level / Mean','fontsize',18);
title('Comparison of Rank Order Profiles','fontsize',18)
legend('A and C', 'C and D')%%%%%compare (C+A) vs. (C+D)
DistanceAC_CD=rop_metric(CRMlog{8},CRMlog{9});
inset4 = sprintf('D = %3.3f',DistanceAC_CD);
text(7500,5,inset4)
toc
